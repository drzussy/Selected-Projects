// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]
 */

CHIP PC {
    IN in[16],load,inc,reset;
    OUT out[16];

    PARTS:
    // Put your code here:
    //the higher a part is in the if else loop the later they are in the code

    //regload
    Or(a=load, b=inc, out=or1);
    Or(a=or1, b=reset, out=regload);
    Register(in=regin, load=regload, out=regout);

    //increment: if inc then increment else pass on regout
    Inc16(in=regout, out=inced);
    Mux16(a=regout, b=inced, sel=inc, out=mux1);

    //load: if load else reinsert mux1
    Mux16(a=mux1, b=in, sel=load, out=mux2);

    //reset: if reset insert to register false, else insert mux2
    Mux16(a=mux2, b=false, sel=reset, out=regin);
    
    //dummy mux for output
    Mux16(a=regout, b=false, sel=false, out=out);
}
