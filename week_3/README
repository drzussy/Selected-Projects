# Week 3: User Input and Mathematical Operations

Welcome to Week 3 of the "Introduction to Computer Science" course project! In this week's module, we explore user input and various mathematical operations. Below, you'll find a summary of the code and topics covered in Week 3.

## Code Overview

### `input_list()`

This function prompts the user for numbers (ints or floats) and returns a list of user inputs along with their sum.

### `inner_product(vec_1, vec_2)`

The `inner_product` function calculates the inner product of two vectors. It checks if the vectors have the same length and returns the result.

### `sequence_monotonicity(seq)`

The `sequence_monotonicity` function checks for the type of sequence (increasing, decreasing, constant, or random) and returns a list of boolean values representing the sequence's characteristics.

### `monotonicity_inverse(bool_list)`

The `monotonicity_inverse` function returns a 4-number example of a sequence based on a list of boolean values representing the desired sequence characteristics. It provides examples of increasing, decreasing, constant, or random sequences.

### `convolve(mat)`

The `convolve` function calculates the convolution of a given matrix and returns the resulting matrix. It excludes the first and last rows and columns from the convolution.

### `sum_of_vectors(vec_list)`

The `sum_of_vectors` function returns a vector that is the sum of a list of vectors. It accepts a list of vectors as input and returns their element-wise sum.

### `num_of_orthogonal(vectors)`

The `num_of_orthogonal` function calculates the number of orthogonal pairs within a list of vectors. It iterates through pairs of vectors and checks if their inner product is zero.

## How to Use

You can execute each of these functions individually by running the Python file containing the respective function in your terminal or IDE. For example, to run `input_list()`, use the following command:

```bash
python your_file.py
